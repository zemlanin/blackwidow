/* @flow */
import type Freezer from 'freezer-js'
export type { getDash, getAjaxStream, getGistStream, findJSONFile, findNamedFile} from './store.js'

export type WEndpoint = {
  url: string,
  method?: string,
  body?: any,
  headers?: any,
  auth?: any,
  schedule: any,
  plain?: boolean
}

type ComputableData = {
  _source: string,
  _expr: string
}

export type DataMapping = {
  [k: string]: ComputableData | DataMapping
}

export type Widget = {
  data: any,
  dataMapping: DataMapping, // internal value
  error?: string
}

export type ReflessEndpoint = {
  url: string,
  method?: string,
  body?: any,
  headers?: any,
  auth?: any,
  schedule: any,
  plain?: boolean
}

export type Endpoint = {
  ref: string
} & ReflessEndpoint

export type Dash = {
  widgets?: {
    [id: string]: Widget
  },
  dataSources?: {
    [id: string]: Endpoint | ReflessEndpoint
  }
}

export type LocalDataSource = {
  schedule: {
    timeInterval: number
  },
  local: true
}

export type State = {
  dataSources: {
    [k: string]: Endpoint | LocalDataSource
  },
  dash: Dash,
  controls: {
    opened: boolean,
    path: string[]
  },
  auth: any
}

declare export function createFreezer () : Freezer<State>
